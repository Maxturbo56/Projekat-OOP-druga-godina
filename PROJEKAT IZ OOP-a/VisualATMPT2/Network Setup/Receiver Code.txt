#include <iostream>
#include <fstream>
#include <boost/asio.hpp>

using boost::asio::ip::tcp;

int main() {
    try {
        boost::asio::io_context io_context;

        // Create an acceptor to listen for incoming connections
        tcp::acceptor acceptor(io_context, tcp::endpoint(tcp::v4(), 12345));

        // Wait for a connection
        tcp::socket socket(io_context);
        acceptor.accept(socket);

        // Open the file to write the received data
        std::ofstream file("received_file.txt", std::ios::binary);

        if (!file.is_open()) {
            std::cerr << "Error opening file for writing." << std::endl;
            return 1;
        }

        // Receive and write the file
        std::vector<char> buffer(1024);
        size_t bytes_received;
        do {
            bytes_received = socket.read_some(boost::asio::buffer(buffer));
            file.write(buffer.data(), bytes_received);
        } while (bytes_received > 0);

        file.close();
    } catch (std::exception& e) {
        std::cerr << "Exception: " << e.what() << std::endl;
    }

    return 0;
}